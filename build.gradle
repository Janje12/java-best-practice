plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.solutions'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '20'
    targetCompatibility = '20'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    implementation {
        exclude module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.5.2'
    runtimeOnly 'org.postgresql:postgresql'

    implementation platform('io.micrometer:micrometer-tracing-bom:latest.release')
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    implementation 'net.ttddyy.observation:datasource-micrometer-spring-boot:1.0.2'
    implementation 'pl.tkowalcz.tjahzi:log4j2-appender-nodep:0.9.32'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'io.rest-assured:rest-assured:5.2.1'
}

test {
    useJUnitPlatform()
}